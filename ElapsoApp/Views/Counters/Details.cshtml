@model ElapsoApp.Models.Counter

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Counter</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreationDate)
        </dd>

    </dl>

    <h4>@Model.Comment.Count comments </h4>

    <table class="table" id="commentsList">

        <tr>
            <td colspan="4">
                <div class="mb-3">
                    <input type="text" id="body" name="body" placeholder="Enter your comment here..." class="form-control" />
                </div>
                <div class="mb-3">
                    <button id="clear" type="reset" class="btn btn-default">Clear</button>
                    <button id="addComment" type="submit" class="btn btn-default">Add comment</button>
                </div>
            </td>
        </tr>


        @if (Model.Comment.Any())
        {

            foreach (var comment in Model.Comment)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => comment.Body)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => comment.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => comment.CreatedBy)
                    </td>
                    <td>
                        <button id="deleteComment" onclick="javascript:deleteComment(@comment.Id)" type="submit" class="close"><span aria-hidden="true">&times;</span></button>
                    </td>
                </tr>
            }
        }

    </table>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>



@section scripts{
    <script>

        //After Click Add Comment Button Pass All Data View To Controller For Save Database
        function addComment(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'PUT',
                url: "/api/Comments",
                data: data,
                success: function(/*result*/) {
                    location.reload();
                },
                error: function() {
                    console.log(data);
                }
            });
        }

        //Collect Multiple Order List For Pass To Controller
        $("#addComment").click(function(e) {
            e.preventDefault();


            //Id,Body,CounterId,CreatedBy,CreationDate
            var data = JSON.stringify({
                Body: $("#body").val(),
                CounterId: @Model.Id,
                CreatedBy: 1,
                CreationDate: new Date().toJSON()
            });

            $.when(addComment(data)).then(function(response) {
                console.log(response);
            }).fail(function(err) {
                console.log(err);
            });
        });


        function deleteComment(id) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'DELETE',
                url: "/api/Comments/" + id,
                success: function(/*result*/) {
                    location.reload();
                },
                error: function() {
                    console.log(data);
                }
            });
        }
    </script>
}